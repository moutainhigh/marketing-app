package com.zhongmei.bty.common.view;import android.content.Context;import android.os.CountDownTimer;import android.util.AttributeSet;import android.view.MotionEvent;import android.view.View;import android.widget.Button;import com.zhongmei.yunfu.R;/** * 发送验证码倒计时控件 * Created by demo on 2018/12/15 */public class TimerButton extends Button {    //倒计时单位    private static final int TIME_PERIOD = 1000;    //总共倒计时时间    private static final int TIME_TOTAOL = 60 * 1000;    //    倒计时控件    CountDownTimer timer;    OnClickListener mOnClickListener;    public TimerButton(Context context) {        super(context);    }    public TimerButton(Context context, AttributeSet attrs) {        super(context, attrs);        setTextSize(20);        setBackgroundResource(R.drawable.btn_yellow);        setTextColor(getResources().getColor(android.R.color.white));        setText(getResources().getString(R.string.get_verify_code));    }    @Override    public void setOnClickListener(OnClickListener l) {        mOnClickListener = l;    }    @Override    public boolean onTouchEvent(MotionEvent event) {        switch (event.getAction()) {            case MotionEvent.ACTION_DOWN://                count();                if (mOnClickListener != null && isEnabled()) {                    mOnClickListener.onClick(this);                }                return true;        }        return super.onTouchEvent(event);    }    public void count() {        if (!isEnabled()) {            return;        }        if (timer == null) {            timer = new CountDownTimer(TIME_TOTAOL, TIME_PERIOD) {                @Override                public void onTick(long millisUntilFinished) {                    setEnabled(false);                    setText(millisUntilFinished / TIME_PERIOD + "s");                }                @Override                public void onFinish() {                    setEnabled(true);                    setText(R.string.get_verify_code);                }            };        }        timer.start();    }    @Override    protected void onDetachedFromWindow() {        super.onDetachedFromWindow();        if (timer != null) {            timer.cancel();        }    }}