apply plugin: 'com.android.library'
apply plugin: 'android-apt'

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        multiDexEnabled true
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "AV1", "1"
            buildConfigField "int", "AV2", "2"
        }

        debug {
            testCoverageEnabled true
            minifyEnabled false
            buildConfigField "int", "AV1", "1"
            buildConfigField "int", "AV2", "2"
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs', '../calm-data/libs'
    }
}

dependencies {
    compile opensdk.AAapi
    apt opensdk.AA
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':marketing-common')
    compile project(':marketing-data')
    compile sdk.recyclerview
    compile opensdk.ormlite

    //添加单元测试
    testCompile sdk.junit
    //testCompile sdk.mockito
    androidTestCompile sdk.testRules
    androidTestCompile(sdk.testEspressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
        transitive true
    }
    androidTestCompile(sdk.testRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

apt {
    arguments {
        if (variant.outputs[0] != null) {
            androidManifestFile variant.outputs[0].processResources.manifestFile
            resourcePackageName 'com.zhongmei.yunfu.basemodule'
            trace true
        }
    }
}